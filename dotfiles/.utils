#!/bin/bash

## Python:

# # set up pyenv #
# # --
# # Commenting out `eval "$(pyenv init -)"` and python related functions in 'env/functions.sh'
# # file should revert the system back to the system-wide installation of Python installed
# # via Homebrew.
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi

# pyenv-virtualenv
if which pyenv-virtualenv-init >/dev/null; then eval "$(pyenv virtualenv-init -)"; fi

# Anaconda3
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/usr/local/anaconda3/bin/conda' 'shell.zsh' 'hook' 2>/dev/null)"
if [ $? -eq 0 ]; then
  eval "$__conda_setup"
else
  if [ -f "/usr/local/anaconda3/etc/profile.d/conda.sh" ]; then
    . "/usr/local/anaconda3/etc/profile.d/conda.sh"
  else
    export PATH="/usr/local/anaconda3/bin:$PATH"
  fi
fi
unset __conda_setup
# <<< conda initialize <<<

# WTF
eval "$(thefuck --alias)"

# z - Fast navigation, see [this gist](https://gist.github.com/mischah/8149239)
if command -v brew >/dev/null 2>&1; then
  # Load rupa's z if installed
  [ -f $(brew --prefix)/etc/profile.d/z.sh ] && source $(brew --prefix)/etc/profile.d/z.sh
fi

if [[ "$MACHINE" == "Linux" ]];then
# Enable asdf to manage various programming runtime versions.
# Requires: https://asdf-vm.com/#/
  source "$HOME"/.asdf/asdf.sh
fi

if [ -n "$BASH_VERSION" ]; then
  # fzf
  [ -f ~/.fzf.bash ] && source ~/.fzf.bash
fi