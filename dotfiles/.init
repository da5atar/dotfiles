#!/bin/bash

unameOut="$(uname -s)"
case "${unameOut}" in
Linux*) MACHINE=Linux ;;
Darwin*) MACHINE=Mac ;;
CYGWIN*) MACHINE=Cygwin ;;
MINGW*) MACHINE=MinGw ;;
*) MACHINE="UNKNOWN:${unameOut}" ;;
esac
export MACHINE

# Set Dropbox and Dev Workspace folders
# Dropbox needs to be installed
export HOSTNAME
HOSTNAME="$(hostname)"

export WORKSPACE
#WORKSPACE=$HOME # Default
# override for Parallels' VMs:
WORKSPACE=/media/psf # change as needed

# Dev Workspace folder for dev envs
export DEV_WORKSPACE=$WORKSPACE"/Dev_workspace"

# Dropbox folder
# export DROPBOX_FOLDER
# export DROPBOX_FOLDER=$HOME"/Dropbox" # default
# DROPBOX_FOLDER=$HOME"Library/CloudStorage/Dropbox" # On Mac Dropbox now utilizes updated Apple File Provider API on Mac 12.5+

# Dev projects backup folder
export DEV_PROJECTS
# DEV_PROJECTS=$DROPBOX_FOLDER"/My_Files/50_74_Resources/50_59_Interests/50_IT/Dev/Dev_workspace_bkp"
DEV_PROJECTS=$DEV_WORKSPACE"/Projects"

# GitHub repos folder
export GITHUB_REPOS
GITHUB_REPOS=$DEV_PROJECTS"/GitHub"

# GitHub working folder
export GITHUB_FOLDER
GITHUB_FOLDER=$DEV_WORKSPACE"/Current_Projects/GitHub"

# These dotfiles
export PROJECT_ROOT
PROJECT_ROOT=$GITHUB_FOLDER"/dotfiles"

# Source aliases and exports
# For a full list of active aliases, run `alias`.
if [[ "$MACHINE" == "Linux" ]]; then
    # shellcheck source=/dev/null
    source "$PROJECT_ROOT/env/aliases-linux.sh"
    # shellcheck source=/dev/null
    source "$PROJECT_ROOT/env/exports-linux.sh"
elif [[ "$MACHINE" == "Mac" ]]; then
    # shellcheck source=/dev/null
    source "$PROJECT_ROOT/env/aliases-mac.sh"
    # shellcheck source=/dev/null
    source "$PROJECT_ROOT/env/exports-mac.sh"
fi

# shellcheck source=/dev/null
source "$PROJECT_ROOT/env/aliases-shared.sh"
# shellcheck source=/dev/null
source "$PROJECT_ROOT/env/exports-shared.sh"
# shellcheck source=/dev/null
source "$PROJECT_ROOT/env/fn-directories.sh"
# shellcheck source=/dev/null
source "$PROJECT_ROOT/env/fn-files.sh"
# shellcheck source=/dev/null
source "$PROJECT_ROOT/env/fn-git.sh"
# shellcheck source=/dev/null
source "$PROJECT_ROOT/env/fn-media.sh"
# shellcheck source=/dev/null
source "$PROJECT_ROOT/env/fn-network.sh"
# shellcheck source=/dev/null
source "$PROJECT_ROOT/env/fn-path.sh"
# shellcheck source=/dev/null
source "$PROJECT_ROOT/env/fn-php.sh"
# shellcheck source=/dev/null
source "$PROJECT_ROOT/env/fn-processes.sh"
# shellcheck source=/dev/null
source "$PROJECT_ROOT/env/fn-python.sh"
# shellcheck source=/dev/null
source "$PROJECT_ROOT/env/fn-text.sh"
# shellcheck source=/dev/null
source "$PROJECT_ROOT/env/tests.sh"
# shellcheck source=/dev/null
source "$PROJECT_ROOT/env/keys.sh"
# shellcheck source=/dev/null
source "$PROJECT_ROOT/env/exports-local.sh"
