#!/bin/bash

unameOut="$(uname -s)"
case "${unameOut}" in
    Linux*)     MACHINE=Linux;;
    Darwin*)    MACHINE=Mac;;
    CYGWIN*)    MACHINE=Cygwin;;
    MINGW*)     MACHINE=MinGw;;
    *)          MACHINE="UNKNOWN:${unameOut}"
esac
export MACHINE

# Set Dropbox and Dev Workspace folders (Based on my Mac computers names)
# Dropbox needs to be installed

export HOSTNAME="$(hostname)"

if [[ "$HOSTNAME" == "dacomp5" ]]
then
    # Dropbox folder
    export DROPBOX_FOLDER="/Volumes/Data/Dropbox";
    # Dev Workspace folder for dev envs
    export DEV_WORKSPACE="/Volumes/Data/Dev_Workspace"
    # Git repos folder
    export GITHUB_FOLDER=$DROPBOX_FOLDER"/Dev/GitHub";
elif [[ "$MACHINE" == "Mac" ]]
then
    # Dropbox folder
    export DROPBOX_FOLDER=$HOME"/Dropbox";
    # Dev Workspace folder for dev envs
    export DEV_WORKSPACE=$HOME"/Dev_workspace";
    # Git repos folder
    export GITHUB_FOLDER=$DROPBOX_FOLDER"/Dev/GitHub"; 
else
    export DEV_WORKSPACE=$HOME"/Dev_workspace"
    # Git repos folder
    export GITHUB_FOLDER=$DEV_WORKSPACE"/GitHub"; 
fi

# Source aliases
# For a full list of active aliases, run `alias`.
if [[ "$MACHINE" == "Linux" ]];then
  PROJECT_ROOT=$GITHUB_FOLDER"/dotfiles"
  source "$PROJECT_ROOT/env/aliases-shared.sh"
  source "$PROJECT_ROOT/env/exports-shared.sh"
  source "$PROJECT_ROOT/env/aliases-linux.sh"
  source "$PROJECT_ROOT/env/exports-linux.sh"
  source "$PROJECT_ROOT/env/functions.sh"
elif [[ "$MACHINE" == "Mac" ]]; then
  PROJECT_ROOT=$DROPBOX_FOLDER"/Dev/GitHub/dotfiles"
  source "$PROJECT_ROOT/env/aliases-shared.sh"
  source "$PROJECT_ROOT/env/exports-shared.sh"
  source "$PROJECT_ROOT/env/aliases-mac.sh"
  source "$PROJECT_ROOT/env/exports-mac.sh"
  source "$PROJECT_ROOT/env/functions.sh"
fi

# Python:
# set up pyenv #
# --
# Commenting out `eval "$(pyenv init -)"` and python related functions in 'env/functions.sh'
# file should revert the system back to the system-wide installation of Python installed 
# via Homebrew.

export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"

if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi

# pyenv-virtualenv
if which pyenv-virtualenv-init > /dev/null; then eval "$(pyenv virtualenv-init -)"; fi

# Initialize virtualenvwrapper
init_virtualenvwrapper

# WTF
eval $(thefuck --alias)